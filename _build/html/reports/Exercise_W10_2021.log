Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/Applications/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Applications/anaconda3/lib/python3.7/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Applications/anaconda3/lib/python3.7/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Applications/anaconda3/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/Applications/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 541, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/Applications/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Applications/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt 
from matplotlib.pyplot import cm

# Data

N=10000
ww = np.linspace(w_e*1.01,w_c*0.99, N)


#Plotting
figure=plt.figure()
axes = figure.add_axes([0.1,0.1,1.2,1.2])
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
axes.plot(ww,t_v, marker=' ')
axes.plot(np.array([w_e, w_e]),np.array([0, 44000]))
t_v=(1/mA)*((w0_2-w_c)+np.log((w_c-w_e)/(ww-w_e)))
axes.set_xlabel('$w$ [-]', fontsize=18);
axes.set_ylabel('$t$ [s]',fontsize=18);
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m<ipython-input-3-2ea43a8a247c>[0m in [0;36m<module>[0;34m[0m
[1;32m     14[0m [0mplt[0m[0;34m.[0m[0mxticks[0m[0;34m([0m[0mfontsize[0m[0;34m=[0m[0;36m14[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     15[0m [0mplt[0m[0;34m.[0m[0myticks[0m[0;34m([0m[0mfontsize[0m[0;34m=[0m[0;36m14[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 16[0;31m [0maxes[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mww[0m[0;34m,[0m[0mt_v[0m[0;34m,[0m [0mmarker[0m[0;34m=[0m[0;34m' '[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     17[0m [0maxes[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mw_e[0m[0;34m,[0m [0mw_e[0m[0;34m][0m[0;34m)[0m[0;34m,[0m[0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m44000[0m[0;34m][0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     18[0m [0mt_v[0m[0;34m=[0m[0;34m([0m[0;36m1[0m[0;34m/[0m[0mmA[0m[0;34m)[0m[0;34m*[0m[0;34m([0m[0;34m([0m[0mw0_2[0m[0;34m-[0m[0mw_c[0m[0;34m)[0m[0;34m+[0m[0mnp[0m[0;34m.[0m[0mlog[0m[0;34m([0m[0;34m([0m[0mw_c[0m[0;34m-[0m[0mw_e[0m[0;34m)[0m[0;34m/[0m[0;34m([0m[0mww[0m[0;34m-[0m[0mw_e[0m[0;34m)[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/Applications/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py[0m in [0;36mplot[0;34m(self, scalex, scaley, data, *args, **kwargs)[0m
[1;32m   1645[0m         """
[1;32m   1646[0m         [0mkwargs[0m [0;34m=[0m [0mcbook[0m[0;34m.[0m[0mnormalize_kwargs[0m[0;34m([0m[0mkwargs[0m[0;34m,[0m [0mmlines[0m[0;34m.[0m[0mLine2D[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1647[0;31m         [0mlines[0m [0;34m=[0m [0;34m[[0m[0;34m*[0m[0mself[0m[0;34m.[0m[0m_get_lines[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mdata[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1648[0m         [0;32mfor[0m [0mline[0m [0;32min[0m [0mlines[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1649[0m             [0mself[0m[0;34m.[0m[0madd_line[0m[0;34m([0m[0mline[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/Applications/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py[0m in [0;36m__call__[0;34m(self, *args, **kwargs)[0m
[1;32m    214[0m                 [0mthis[0m [0;34m+=[0m [0margs[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    215[0m                 [0margs[0m [0;34m=[0m [0margs[0m[0;34m[[0m[0;36m1[0m[0;34m:[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 216[0;31m             [0;32myield[0m [0;32mfrom[0m [0mself[0m[0;34m.[0m[0m_plot_args[0m[0;34m([0m[0mthis[0m[0;34m,[0m [0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    217[0m [0;34m[0m[0m
[1;32m    218[0m     [0;32mdef[0m [0mget_next_color[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/Applications/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py[0m in [0;36m_plot_args[0;34m(self, tup, kwargs)[0m
[1;32m    340[0m [0;34m[0m[0m
[1;32m    341[0m         [0;32mif[0m [0mx[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;36m0[0m[0;34m][0m [0;34m!=[0m [0my[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 342[0;31m             raise ValueError(f"x and y must have same first dimension, but "
[0m[1;32m    343[0m                              f"have shapes {x.shape} and {y.shape}")
[1;32m    344[0m         [0;32mif[0m [0mx[0m[0;34m.[0m[0mndim[0m [0;34m>[0m [0;36m2[0m [0;32mor[0m [0my[0m[0;34m.[0m[0mndim[0m [0;34m>[0m [0;36m2[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: x and y must have same first dimension, but have shapes (10000,) and (100,)
ValueError: x and y must have same first dimension, but have shapes (10000,) and (100,)

